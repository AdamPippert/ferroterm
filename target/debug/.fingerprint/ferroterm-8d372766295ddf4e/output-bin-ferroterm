{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1789,"byte_end":1813,"line_start":52,"line_end":52,"column_start":28,"column_end":52,"is_primary":true,"text":[{"text":"                #[cfg_attr(feature = \"cargo-clippy\", allow(replace_consts))]","highlight_start":28,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2828,"byte_end":2871,"line_start":84,"line_end":84,"column_start":24,"column_end":67,"is_primary":false,"text":[{"text":"    ($name:ident) => ({sel_impl!(concat!(stringify!($name), '\\0'))});","highlight_start":24,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":4239,"byte_end":4250,"line_start":131,"line_end":131,"column_start":19,"column_end":30,"is_primary":false,"text":[{"text":"        let sel = sel!($name);","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/bin/main.rs","byte_start":12601,"byte_end":12682,"line_start":341,"line_end":341,"column_start":35,"column_end":116,"is_primary":false,"text":[{"text":"        let ns_app: *mut Object = msg_send![objc::runtime::Class::get(\"NSApplication\").unwrap(), sharedApplication];","highlight_start":35,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"msg_send!","def_site_span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":3550,"byte_end":3571,"line_start":111,"line_end":111,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! msg_send {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel!","def_site_span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2786,"byte_end":2802,"line_start":83,"line_end":83,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! sel {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel_impl!","def_site_span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1453,"byte_end":1474,"line_start":44,"line_end":44,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! sel_impl {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `sel_impl` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/main.rs:341:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let ns_app: *mut Object = msg_send![objc::runtime::Class::get(\"NSApplication\").unwrap(), sharedApplication];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `sel_impl` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `sel_impl` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1789,"byte_end":1813,"line_start":52,"line_end":52,"column_start":28,"column_end":52,"is_primary":true,"text":[{"text":"                #[cfg_attr(feature = \"cargo-clippy\", allow(replace_consts))]","highlight_start":28,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2904,"byte_end":2957,"line_start":85,"line_end":85,"column_start":30,"column_end":83,"is_primary":false,"text":[{"text":"    ($($name:ident :)+) => ({sel_impl!(concat!($(stringify!($name), ':'),+, '\\0'))});","highlight_start":30,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":4502,"byte_end":4518,"line_start":140,"line_end":140,"column_start":19,"column_end":35,"is_primary":false,"text":[{"text":"        let sel = sel!($($name:)+);","highlight_start":19,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/bin/main.rs","byte_start":12746,"byte_end":12821,"line_start":344,"line_end":344,"column_start":21,"column_end":96,"is_primary":false,"text":[{"text":"        let _: () = msg_send![ns_app, orderFrontStandardAboutPanel: std::ptr::null::<Object>()];","highlight_start":21,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"msg_send!","def_site_span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":3550,"byte_end":3571,"line_start":111,"line_end":111,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! msg_send {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel!","def_site_span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2786,"byte_end":2802,"line_start":83,"line_end":83,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! sel {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel_impl!","def_site_span":{"file_name":"/Users/apippert/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1453,"byte_end":1474,"line_start":44,"line_end":44,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! sel_impl {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `sel_impl` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/main.rs:344:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let _: () = msg_send![ns_app, orderFrontStandardAboutPanel: std::ptr::null::<Object>()];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `sel_impl` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `sel_impl` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `modifiers`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bin/main.rs","byte_start":6766,"byte_end":6775,"line_start":182,"line_end":182,"column_start":62,"column_end":71,"is_primary":true,"text":[{"text":"    fn handle_key_input(&mut self, key_event: WinitKeyEvent, modifiers: Modifiers) {","highlight_start":62,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bin/main.rs","byte_start":6766,"byte_end":6775,"line_start":182,"line_end":182,"column_start":62,"column_end":71,"is_primary":true,"text":[{"text":"    fn handle_key_input(&mut self, key_event: WinitKeyEvent, modifiers: Modifiers) {","highlight_start":62,"highlight_end":71}],"label":null,"suggested_replacement":"_modifiers","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `modifiers`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/main.rs:182:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn handle_key_input(&mut self, key_event: WinitKeyEvent, modifiers: Modifiers) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_modifiers`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"methods `initialize_graphics` and `shutdown` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bin/main.rs","byte_start":1064,"byte_end":1081,"line_start":43,"line_end":43,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"impl FerrotermApp {","highlight_start":1,"highlight_end":18}],"label":"methods in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/main.rs","byte_start":3291,"byte_end":3310,"line_start":96,"line_end":96,"column_start":14,"column_end":33,"is_primary":true,"text":[{"text":"    async fn initialize_graphics(&mut self, window: Arc<Window>) -> Result<(), Box<dyn std::error::Error>> {","highlight_start":14,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/main.rs","byte_start":12049,"byte_end":12057,"line_start":322,"line_end":322,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"    async fn shutdown(&mut self) {","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: methods `initialize_graphics` and `shutdown` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/main.rs:96:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl FerrotermApp {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn initialize_graphics(&mut self, window: Arc<Window>) -> Result<(), Box<dyn std::error::Error>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn shutdown(&mut self) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 4 warnings emitted\u001b[0m\n\n"}
